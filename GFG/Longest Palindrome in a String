class Solution:
    def length(self, left, right, s):
        length = 0
        while left >= 0 and right < len(s):
            if s[left] == s[right]:
                length += 2
                left -= 1
                right += 1
            else:
                break
        return length

    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        if n == 0:
            return ""
        
        max_len = 1
        start = 0

        for i in range(n):
            length = 1 + self.length(i - 1, i + 1, s)
            if length > max_len:
                max_len = length
                start = i - length // 2

        for i in range(1, n):
            length = self.length(i - 1, i, s)
            if length > max_len:
                max_len = length
                start = i - length // 2

        return s[start:start + max_len]
