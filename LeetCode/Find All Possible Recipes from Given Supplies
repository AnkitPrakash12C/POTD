from collections import defaultdict, deque
from typing import List

class Solution:
    def findAllRecipes(self, recipes: List[str], ingredients: List[List[str]], supplies: List[str]) -> List[str]:
        graph = defaultdict(list)
        in_degree = defaultdict(int)
        
        for i, recipe in enumerate(recipes):
            in_degree[recipe] = len(ingredients[i])
            for ingredient in ingredients[i]:
                graph[ingredient].append(recipe)
        
        queue = deque(supplies)
        result = []
        
        while queue:
            item = queue.popleft()
            
            if item in recipes:
                result.append(item)
            
            for recipe in graph[item]:
                in_degree[recipe] -= 1
                if in_degree[recipe] == 0:
                    queue.append(recipe)
        
        return result
