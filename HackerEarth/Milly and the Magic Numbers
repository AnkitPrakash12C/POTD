#Milly and the Magic Numbers
import itertools

def sieve(limit=50):
    is_prime = [True] * (limit + 1)
    is_prime[0] = is_prime[1] = False  
    for num in range(2, int(limit**0.5) + 1):
        if is_prime[num]:
            for multiple in range(num * num, limit + 1, num):
                is_prime[multiple] = False

    primes = [i for i, prime in enumerate(is_prime) if prime]
    return primes

PRIMES_UP_TO_50 = sieve(50)

def count_magic_numbers(n, l, r):
    primes = [p for p in PRIMES_UP_TO_50 if p <= n]  
    total = 0

    for sz in range(1, len(primes) + 1):
        for subset in itertools.combinations(primes, sz):
            lcm = 1
            for num in subset:
                lcm *= num
                if lcm > r:  
                    break

            if lcm <= r:
                count = (r // lcm) - ((l - 1) // lcm)
                if sz % 2 == 1:  
                    total += count
                else: 
                    total -= count

    return total

t = int(input())

while t > 0:
    n, l, r = map(int, input().split())
    print(count_magic_numbers(n, l, r))
    t -= 1
